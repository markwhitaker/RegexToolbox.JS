"use strict";var RegexQuantifier=function(a){if(!(typeof(a)==="string"||a instanceof String)){throw new Error("regexString must be a String")}this.r=a};RegexQuantifier.zeroOrMore=new RegexQuantifier("*");RegexQuantifier.oneOrMore=new RegexQuantifier("+");RegexQuantifier.noneOrOne=new RegexQuantifier("?");RegexQuantifier.exactly=function(a){return new RegexQuantifier("{"+a+"}")};RegexQuantifier.atLeast=function(a){return new RegexQuantifier("{"+a+",}")};RegexQuantifier.noMoreThan=function(a){return new RegexQuantifier("{0,"+a+"}")};RegexQuantifier.between=function(a,b){return new RegexQuantifier("{"+a+","+b+"}")};var RegexBuilder=function(){var b=0;var d="";var e=function(g){return g.replace("\\","\\\\").replace("?","\\?").replace(".","\\.").replace("+","\\+").replace("*","\\*").replace("^","\\^").replace("$","\\$").replace("(","\\(").replace(")","\\)").replace("[","\\[").replace("]","\\]").replace("{","\\{").replace("}","\\}").replace("|","\\|")};var f=function(h){var g=h.replace("]","\\]");if(g.indexOf("^")===0){g="\\"+g}return g};var c=function(g){if(!g){return}if(!(g instanceof RegexQuantifier)){throw new Error("quantifier must be a RegexQuantifier")}d+=g.r};var a=function(g){return typeof(g)==="string"||g instanceof String};this.buildRegex=function(){if(b===1){throw new Error("One group is still open")}if(b>1){throw new Error(b+"groups are still open")}return new RegExp(d)};this.text=function(h,g){return this.regexText(e(h),g)};this.regexText=function(h,g){if(h===null||h===undefined||h.length===0){return this}if(!a(h)){throw new Error("text must be a String")}if(!g){d+=h;return this}return this.startNonCapturingGroup().regexText(h).endGroup(g)};this.anyCharacter=function(g){d+=".";c(g);return this};this.whitespace=function(g){d+="\\s";c(g);return this};this.nonWhitespace=function(g){d+="\\S";c(g);return this};this.digit=function(g){d+="\\d";c(g);return this};this.nonDigit=function(g){d+="\\D";c(g);return this};this.letter=function(g){d+="[a-zA-Z]";c(g);return this};this.nonLetter=function(g){d+="[^a-zA-Z]";c(g);return this};this.uppercaseLetter=function(g){d+="[A-Z]";c(g);return this};this.lowercaseLetter=function(g){d+="[a-z]";c(g);return this};this.letterOrDigit=function(g){d+="[a-zA-Z0-9]";c(g);return this};this.nonLetterOrDigit=function(g){d+="[^a-zA-Z0-9]";c(g);return this};this.hexDigit=function(g){d+="[0-9A-Fa-f]";c(g);return this};this.uppercaseHexDigit=function(g){d+="[0-9A-F]";c(g);return this};this.lowercaseHexDigit=function(g){d+="[0-9a-f]";c(g);return this};this.nonHexDigit=function(g){d+="[^0-9A-Fa-f]";c(g);return this};this.wordCharacter=function(g){d+="\\w";c(g);return this};this.nonWordCharacter=function(g){d+="\\W";c(g);return this};this.anyCharacterFrom=function(g,h){d+="["+f(g)+"]";c(h);return this};this.anyCharacterExcept=function(g,h){d+="[^"+f(g)+"]";c(h);return this};this.anyOf=function(g,h){if(g===null||g===undefined){return this}if(!(g instanceof Array)){return this.text(g,h)}if(g.length===1){return this.text(g[0],h)}if(g.length>1){return this.startNonCapturingGroup().regexText(g.map(function(i){return e(i)}).join("|")).endGroup(h)}return this};this.startOfString=function(){d+="^";return this};this.endOfString=function(){d+="$";return this};this.wordBoundary=function(){d+="\\b";return this};this.startGroup=function(){d+="(";b++;return this};this.startNonCapturingGroup=function(){d+="(?:";b++;return this};this.endGroup=function(g){if(b===0){throw new Error("Cannot call endGroup() until a group has been started with startGroup()")}d+=")";b--;c(g);return this}};